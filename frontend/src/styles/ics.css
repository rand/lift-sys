/**
 * ICS (Integrated Context Studio) Styles
 * Semantic highlighting, editor, and component styles
 */

/* ===== ProseMirror Editor Base ===== */
.ProseMirror {
  position: relative;
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0;
  padding: 1rem;
  outline: none;
  font-family: 'Geist', system-ui, -apple-system, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  color: hsl(var(--foreground));
}

.ProseMirror pre {
  white-space: pre-wrap;
  font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', monospace;
  font-size: 14px;
  background: hsl(var(--muted));
  padding: 0.75rem 1rem;
  border-radius: 0.375rem;
  overflow-x: auto;
}

.ProseMirror code {
  font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', monospace;
  font-size: 14px;
  background: hsl(var(--muted));
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
}

/* ===== Entity Highlighting ===== */
.entity {
  border-radius: 0.125rem;
  padding: 0.125rem 0.25rem;
  font-weight: 500;
}

.entity-person { color: #3b82f6; background: rgba(59, 130, 246, 0.1); }
.entity-org { color: #8b5cf6; background: rgba(139, 92, 246, 0.1); }
.entity-gpe { color: #14b8a6; background: rgba(20, 184, 166, 0.1); }
.entity-loc { color: #06b6d4; background: rgba(6, 182, 212, 0.1); }
.entity-product { color: #f59e0b; background: rgba(245, 158, 11, 0.1); }
.entity-event { color: #ec4899; background: rgba(236, 72, 153, 0.1); }
.entity-technical { color: #3b82f6; background: rgba(59, 130, 246, 0.15); }
.entity-function { color: #8b5cf6; background: rgba(139, 92, 246, 0.15); }
.entity-class { color: #14b8a6; background: rgba(20, 184, 166, 0.15); }
.entity-variable { color: #06b6d4; background: rgba(6, 182, 212, 0.15); }
.entity-type { color: #10b981; background: rgba(16, 185, 129, 0.15); }

/* ===== Constraint Highlighting ===== */
.constraint {
  background: rgba(249, 115, 22, 0.15);
  border-bottom: 2px solid #f97316;
  border-radius: 0.125rem;
  padding: 0.125rem 0.25rem;
  font-weight: 500;
}

.constraint-return_constraint { border-bottom-color: #f97316; }
.constraint-loop_constraint { border-bottom-color: #a855f7; }
.constraint-position_constraint { border-bottom-color: #14b8a6; }

.severity-error { border-bottom-style: solid; }
.severity-warning { border-bottom-style: dashed; }

/* ===== Typed Holes ===== */
.hole {
  background: rgba(251, 146, 60, 0.2);
  border: 1px dashed #fb923c;
  border-radius: 0.25rem;
  padding: 0.125rem 0.375rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
}

.hole:hover {
  background: rgba(251, 146, 60, 0.3);
  border-color: #f97316;
}

.hole-intent { background: rgba(59, 130, 246, 0.2); border-color: #3b82f6; }
.hole-signature { background: rgba(34, 197, 94, 0.2); border-color: #22c55e; }
.hole-effect { background: rgba(234, 179, 8, 0.2); border-color: #eab308; }
.hole-assertion { background: rgba(168, 85, 247, 0.2); border-color: #a855f7; }
.hole-implementation { background: rgba(107, 114, 128, 0.2); border-color: #6b7280; }

.hole-unresolved { border-style: dashed; }
.hole-in_progress { border-style: solid; border-width: 2px; }
.hole-resolved { border-style: solid; border-color: #22c55e; background: rgba(34, 197, 94, 0.1); }

/* ===== References (#file, @symbol) ===== */
.reference {
  color: #0ea5e9;
  background: rgba(14, 165, 233, 0.1);
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  cursor: pointer;
  font-weight: 500;
  text-decoration: underline;
  text-decoration-style: dotted;
  text-underline-offset: 2px;
  transition: all 0.2s;
}

.reference:hover {
  background: rgba(14, 165, 233, 0.2);
  text-decoration-style: solid;
}

.reference-file::before { content: '#'; opacity: 0.6; }
.reference-symbol::before { content: '@'; opacity: 0.6; }

/* ===== Marks: Ambiguity, Contradiction, Modal, Relationship ===== */
.ambiguity {
  text-decoration: wavy underline #eab308;
  text-underline-offset: 3px;
  cursor: help;
}

.contradiction {
  text-decoration: wavy underline #ef4444;
  text-underline-offset: 3px;
  cursor: help;
}

.modal {
  font-weight: 600;
  padding: 0 0.125rem;
}

.modal-certainty { color: #dc2626; }  /* must, will, always */
.modal-possibility { color: #0ea5e9; }  /* may, might, could */
.modal-necessity { color: #f97316; }  /* should, ought to */
.modal-prohibition { color: #b91c1c; }  /* must not, cannot */

.relationship {
  position: relative;
  padding: 0 0.125rem;
}

.relationship-causal { color: #8b5cf6; }  /* because, therefore */
.relationship-temporal { color: #06b6d4; }  /* before, after, while */
.relationship-conditional { color: #f59e0b; }  /* if, unless */
.relationship-dependency { color: #14b8a6; }  /* requires, depends on */

/* ===== Editor Container ===== */
.ics-editor-container {
  height: 100%;
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  overflow: hidden;
  background: hsl(var(--background));
}

.ics-editor-toolbar {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-bottom: 1px solid hsl(var(--border));
  background: hsl(var(--muted) / 0.3);
}

.ics-editor-content {
  height: calc(100% - 3rem);
  overflow-y: auto;
}

/* ===== Hole Badge (widget) ===== */
.hole-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 1.25rem;
  padding: 0 0.5rem;
  margin: 0 0.25rem;
  font-size: 0.75rem;
  font-weight: 600;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: all 0.2s;
  vertical-align: middle;
}

.hole-badge:hover {
  transform: scale(1.05);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
}

.hole-badge.hole-intent {
  background: #3b82f6;
  color: white;
}

.hole-badge.hole-signature {
  background: #22c55e;
  color: white;
}

.hole-badge.hole-effect {
  background: #eab308;
  color: white;
}

.hole-badge.hole-assertion {
  background: #a855f7;
  color: white;
}

.hole-badge.hole-implementation {
  background: #6b7280;
  color: white;
}

.hole-badge.hole-unresolved {
  opacity: 0.8;
  border: 2px dashed rgba(255, 255, 255, 0.5);
}

.hole-badge.hole-in_progress {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.hole-badge.hole-resolved {
  background: #22c55e;
  opacity: 0.6;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

/* ===== Autocomplete Popup ===== */
.autocomplete-popup {
  position: absolute;
  z-index: 1000;
  min-width: 200px;
  max-width: 400px;
  max-height: 300px;
  overflow-y: auto;
  background: hsl(var(--popover));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.autocomplete-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: background 0.15s;
}

.autocomplete-item:hover,
.autocomplete-item.selected {
  background: hsl(var(--accent));
}

.autocomplete-item-icon {
  opacity: 0.6;
  font-size: 0.875rem;
}

.autocomplete-item-label {
  flex: 1;
  font-size: 0.875rem;
}

.autocomplete-item-detail {
  font-size: 0.75rem;
  opacity: 0.6;
}

/* ===== Selection & Focus ===== */
.ProseMirror-selectednode {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
  border-radius: 0.25rem;
}

.ProseMirror-focused {
  outline: none;
}

/* ===== Placeholder ===== */
.ProseMirror p.is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* ===== Semantic Tooltip ===== */
.semantic-tooltip {
  pointer-events: none;
  animation: tooltipFadeIn 0.15s ease-out;
}

@keyframes tooltipFadeIn {
  from { opacity: 0; transform: translateY(-4px); }
  to { opacity: 1; transform: translateY(0); }
}

.tooltip-content {
  background: hsl(var(--popover));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  padding: 0.75rem;
  max-width: 300px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.tooltip-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid hsl(var(--border));
}

.tooltip-badge {
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  color: hsl(var(--primary));
  background: hsl(var(--primary) / 0.1);
  padding: 0.125rem 0.5rem;
  border-radius: 0.25rem;
}

.tooltip-confidence {
  font-size: 0.75rem;
  font-weight: 600;
  color: #22c55e;
}

.tooltip-severity {
  font-size: 0.75rem;
  font-weight: 600;
}

.tooltip-status {
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.125rem 0.5rem;
  border-radius: 0.25rem;
}

.tooltip-status.status-unresolved {
  color: #f59e0b;
  background: rgba(245, 158, 11, 0.1);
}

.tooltip-status.status-in_progress {
  color: #3b82f6;
  background: rgba(59, 130, 246, 0.1);
}

.tooltip-status.status-resolved {
  color: #22c55e;
  background: rgba(34, 197, 94, 0.1);
}

.tooltip-body {
  font-size: 0.875rem;
  line-height: 1.5;
}

.tooltip-label {
  font-weight: 600;
  margin-top: 0.5rem;
  margin-bottom: 0.25rem;
  color: hsl(var(--muted-foreground));
}

.tooltip-value {
  color: hsl(var(--foreground));
  margin-bottom: 0.25rem;
}

.tooltip-hint {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
  font-style: italic;
  margin-top: 0.25rem;
}

.tooltip-expression {
  font-family: var(--font-mono);
  font-size: 0.75rem;
  background: hsl(var(--muted));
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  margin-top: 0.25rem;
}

.tooltip-list {
  margin: 0.25rem 0;
  padding-left: 1.25rem;
  list-style: disc;
}

.tooltip-list li {
  margin: 0.125rem 0;
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .ProseMirror {
    color: hsl(var(--foreground));
  }

  .entity { filter: brightness(1.2); }
  .constraint { filter: brightness(1.1); }
  .hole { filter: brightness(1.15); }
  .reference { filter: brightness(1.2); }

  .tooltip-content {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2);
  }
}
