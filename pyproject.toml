[project]
name = "lift-sys"
version = "0.1.0"
description = "Modular platform for verifiable AI-native software development"
requires-python = ">=3.11"
authors = [{name = "Lift Sys Team"}]
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.29.0",
    "pydantic>=2.6.0",
    "lark>=1.1.9",
    "z3-solver>=4.13.0",
    "gitpython>=3.1.43",
    "httpx>=0.27.0",
    "textual>=0.49.0",
    "websockets>=11.0",
    "rich>=13.7",
    "python-dotenv>=1.0.1",
    "cryptography>=42.0.0",
    "anthropic>=0.25.0",
    "openai>=1.30.0",
    "google-generativeai>=0.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.1.1",
    "pytest-asyncio>=0.23.6",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-playwright>=0.4.4",
    "anyio>=4.3.0",
    "playwright>=1.41.0"
]

[project.scripts]
test = "pytest:main"
test-cov = "pytest:main"

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=lift_sys",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
pythonpath = ["."]
testpaths = ["tests"]
markers = [
    "unit: Unit tests for isolated components",
    "integration: Integration tests for service interactions",
    "e2e: End-to-end tests for full user workflows",
    "slow: Tests that take a long time to run",
    "playwright: Tests that exercise the Playwright browser automation stack",
    "textual: Tests that exercise the Textual TUI test harness",
    "asyncio: Coroutine based tests executed with pytest-asyncio"
]
asyncio_mode = "auto"
filterwarnings = [
    "error::DeprecationWarning",
]

[tool.coverage.run]
source = ["lift_sys"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]

[dependency-groups]
dev = ["pytest", "pytest-asyncio", "pytest-cov", "pytest-mock", "anyio"]
